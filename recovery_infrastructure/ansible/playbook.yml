---
- name: Setup Application
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - git
        - nginx
        - nodejs
        - net-tools
        - python3-certbot-nginx
        - python3-pip
        - mysql-client-8.0
        - npm

    - name: Remove 'https://' from repository URL
      set_fact:
        repo_url: "{{ gitrepo | regex_replace('https:\/\/', '@') }}"

    - name: Add github token to url 'https://' to token for cloning
      set_fact:
        new_token: "https://{{ git_token }}"

    - name: Install Azure CLI with their provided script
      shell: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Create Automated Restore Directory
      ansible.builtin.file:
        path: /opt/Restore
        state: directory
        owner: root
        group: root
        mode: '0777'
        recurse: yes
      become: yes   

    - name: Clone the repository with a specific branch
      git:
        repo: "{{ new_token }}{{ repo_url }}"
        dest: /home/alpha/nodejs
        version: "{{ git_branch }}"

    - name: Create .env file with environment variables
      template:
        src: templates/env.j2
        dest: /home/alpha/nodejs/.env
      vars:
        azure_db_username: "{{ db_user | quote }}@{{ db_database | quote }}"
        db_host: "{{ db_host }}"
        db_password: "{{ db_password }}"
        db_database: "{{ db_database }}"
        db_user: "{{ azure_db_username }}"

    - name: Install Nodejs Packages
      shell: |
        npm install
      args:
        executable: /bin/bash
        chdir: /home/alpha/nodejs
      become: yes
      become_user: root

    - name: Setup system.d Service File
      template:
        src: templates/systemd_service.j2
        dest: /etc/systemd/system/dev-app.service

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable nodejs application service
      systemd:
        name: dev-app
        enabled: yes

    - name: Remove default Nginx file
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent    

    - name: Setup Nginx vHost file
      template:
        src: templates/dev_app_nginx_conf.j2
        dest: /etc/nginx/conf.d/nodejs.conf
      vars:
        domain_name: "{{ domain_name }}"

    - name: Setup SSL Files.
      command: sudo certbot --nginx -d {{ domain_name }} --non-interactive --agree-tos -m {{ ssl_email }} 
      become: yes

    - name: Start nodejs application service
      systemd:
        name: dev-app
        state: restarted

    - name: Change Script values.
      template:
        src: templates/restore.j2
        dest: /opt/Restore/restore.sh
      become: yes
      vars:
        azure_db_username: "{{ db_user | quote }}@{{ db_database | quote }}"
        storage_account_name: "{{ azureStorageAccountName }}"
        container_name: "{{ azureContainerName }}"
        sas_token:  "{{ sas_token }}"
        destination_path: "/opt/Restore"
        db_host: "{{ db_host }}"
        db_user: "{{ azure_db_username }}"
        db_name: "{{ db_database }}"
        db_password: "{{ db_password }}"       

    - name: Copy the Python script
      template:
        src: templates/getLatestBlob.j2
        dest: /opt/Restore/getBlobName.py


    - name: Make the script executable
      file:
        path: "/opt/Restore/restore.sh"
        mode: 'u+x,g+x,o+x'

    - name: Get the AzureJsonData
      command: bash /opt/Restore/restore.sh

    - name: Start nodejs application service
      systemd:
        name: dev-app
        state: restarted